[rank: 0] Seed set to 23
/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/taming/modules/losses/lpips.py:29: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.load_state_dict(torch.load(ckpt, map_location=torch.device("cpu")), strict=False)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/pytorch_lightning/loops/utilities.py:73: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
Traceback (most recent call last):
  File "/isilon/datalake/cialab/scratch/cialab/Hao/work_record/Project4_ear/codes/vq_imageNet/latent-diffusion/main.py", line 757, in <module>
    trainer.fit(model, data)
  File "/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 561, in fit
    call._call_and_handle_interrupt(
  File "/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 48, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 599, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 962, in _run
    _verify_loop_configurations(self)
  File "/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/pytorch_lightning/trainer/configuration_validator.py", line 37, in _verify_loop_configurations
    __verify_manual_optimization_support(trainer, model)
  File "/isilon/datalake/cialab/scratch/cialab/Hao/miniconda3/envs/vqVAE/lib/python3.11/site-packages/pytorch_lightning/trainer/configuration_validator.py", line 129, in __verify_manual_optimization_support
    raise MisconfigurationException(
lightning_fabric.utilities.exceptions.MisconfigurationException: Automatic gradient accumulation is not supported for manual optimization. Remove `Trainer(accumulate_grad_batches=2)` or switch to automatic optimization.
