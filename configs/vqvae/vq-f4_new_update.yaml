model:
  base_learning_rate: 4.5e-06
  target: ldm.models.autoencoder.VQModel
  params:
    embed_dim: 3
    n_embed: 8192
    monitor: val/rec_loss

    ddconfig:
      double_z: false
      z_channels: 3
      resolution: 256
      in_channels: 3
      out_ch: 3
      ch: 128
      ch_mult:
      - 1
      - 2
      - 4
      num_res_blocks: 2
      attn_resolutions: []
      dropout: 0.0

    lossconfig:
      target: taming.modules.losses.vqperceptual.VQLPIPSWithDiscriminator
      params:
        disc_conditional: false
        disc_in_channels: 3
        disc_start: 0
        disc_weight: 0.75
        codebook_weight: 1.0

    # === 新增：量化器通过 instantiate_from_config ===
    quantizeconfig:
      target: ldm.modules.quantizer.VectorQuantizer2_with_soft_dist   
      params:
        n_e: ${model.params.n_embed}
        e_dim: ${model.params.embed_dim}
        beta: 0.25
        embedding_loss_weight: 0.01
        remap: null                # 如需子集映射，填 .npy 路径；否则保持 null
        sane_index_shape: true     # 需要 bhw 形状的 index map
        mem_dict:
          tau: 1.0
          decay_dict:
            method: exp
            decay_rate: 0.1
            warmup_flag: false
            warmup_epochs: 2
            warmup_type: cosine
            peak_p: 1.0

    # === 新增：把“每 50000 step 算 1 个 epoch”，量化器的 max_epoch=300 ===
    val_interval: 100000
    max_epoch_quant: 300


data:
  target: main.DataModuleFromConfig
  params:
    num_workers: 8
    batch_size: 12
    wrap: True
    train:
      target: ldm.data.imagenet.ImageNetSRTrain
      params:
        # data_root: /isilon/datalake/gurcan_rsch/original/cialab/ImageNet_2012
        data_root: /isilon/datalake/cialab/original/cialab/image_database/ImageNet2012
        allow_at: false
        size: 256
        degradation: pil_nearest
    validation:
      target: ldm.data.imagenet.ImageNetSRValidation
      params:
        # data_root: /isilon/datalake/gurcan_rsch/original/cialab/ImageNet_2012
        data_root: /isilon/datalake/cialab/original/cialab/image_database/ImageNet2012
        allow_at: false
        size: 256
        degradation: pil_nearest

lightning:
  trainer:
    benchmark: true
    accumulate_grad_batches: 1     # required for manual optimization
    max_epochs: 20
    val_check_interval: 50000   # run a full validation loop every 50k training batches
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 1000
        max_images: 8
        increase_log_steps: True
    early_stopping:
      target: pytorch_lightning.callbacks.EarlyStopping
      params:
        monitor: val/rec_loss # make sure your model logs this (you added it earlier)
        mode: min
        patience: 5           # tune this
        min_delta: 0.0005     # ignore tiny improvements
        verbose: true

    # (optional) also checkpoint the best by LPIPS
    # modelcheckpoint:
    #   target: pytorch_lightning.callbacks.ModelCheckpoint
    #   params:
    #     # dirpath: ${some_ckpt_dir}         # you already set this in code
    #     filename: "{epoch:06}-{val_lpips:.4f}"
    #     monitor: val/lpips
    #     mode: min
    #     save_last: true
    #     save_top_k: 3


